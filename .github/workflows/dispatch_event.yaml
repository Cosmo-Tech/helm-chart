name: Receive repository dispatch event

on:
  # Listen to a repository dispatch event by the name of `dispatch-event`
  repository_dispatch:
    types: [dispatch-event]

jobs:
  test-helm:
    runs-on: ubuntu-latest
    environment: warspace-dev
    # if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: ðŸŽ¯ Checkout Code Source
        uses: actions/checkout@v3

      - name: Setup ArgoCD CLI
        uses: imajeetyadav/argocd-cli@v1
        with:
          version: v2.11.3

      - name: login
        run: |
          argocd login warp.api.cosmotech.com --grpc-web --username ${{ secrets.USER }} --password "${{ secrets.PASS }}"

      - name: cosmotech api deploy test
        run: |
          argocd app create --upsert cosmotech-api-test -f applications/api.yaml;

      - name: set arguments
        run: |
          argocd app set cosmotech-api-test \
            --parameter argo.imageCredentials.password=${{secrets.ACR}} \
            --parameter config.csm.platform.azure.credentials.clientSecret=${{secrets.CLIENT}} \
            --parameter config.csm.platform.azure.credentials.customer.clientSecret=${{secrets.CUSTOMER_CLIENT}} \
            --parameter config.csm.platform.azure.storage.account-key=${{secrets.STORAGE}} \
            --parameter config.csm.platform.containerRegistry.registryPassword=${{secrets.ACR}} \
            --parameter config.csm.platform.twincache.password=${{secrets.REDIS}} \
            --parameter image.tag=${{github.event.client_payload.gh_sha}}
          argocd app wait cosmotech-api-test --timeout 300;

  # push_helm_chart_to_oci:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
  #   needs:
  #     - test_helm
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Helm
  #       uses: azure/setup-helm@v4.2.0

  #     - name: Retrieve branch or tag name
  #       id: refvar
  #       run: echo "::set-output name=gitRefName::${GITHUB_REF#refs/*/}"

  #     - name: Login to GitHub Container Registry
  #       run: |
  #         echo "${GITHUB_TOKEN}" | \
  #           helm registry login ghcr.io \
  #             --username "${{ github.actor }}" \
  #             --password-stdin

  #     - name: Push Helm Chart (tag) to GitHub Container Registry
  #       if: startsWith(github.ref, 'refs/tags/')
  #       run: |
  #         helm chart save charts/cosmotechapi-azure ghcr.io/cosmo-tech/cosmotech-api-chart-azure:${{ steps.refvar.outputs.gitRefName }}
  #         helm chart push ghcr.io/cosmo-tech/cosmotech-api-chart-azure:${{ steps.refvar.outputs.gitRefName }}

  #     - name: Push Helm Chart (latest) to GitHub Container Registry
  #       if: github.ref == 'refs/heads/main'
  #       run: |
  #         helm chart save cosmotech-api-chart-azure ghcr.io/cosmo-tech/cosmotech-api-chart-azure:latest
  #         helm chart push ghcr.io/cosmo-tech/cosmotech-api-chart-azure:latest

  #     - name: Logout from GitHub Container Registry
  #       if: ${{ always() }}
  #       run: |
  #         helm registry logout ghcr.io || true